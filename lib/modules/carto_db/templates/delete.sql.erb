<%= render '_normalize_toggle' %>

UPDATE <%= table_name %> AS t
SET toggle = NULL
WHERE ST_Intersects(<%= render '_validation_geom' %>, t.the_geom)
  AND t.toggle = true
  AND country_id = '<%= validation.country.iso %>';

INSERT INTO <%= table_name %> (the_geom, action, user_id, phase, phase_id, prev_phase, edit_phase, toggle, country_id)
  SELECT
    ST_Multi(ST_Intersection(<%= render '_validation_geom' %>, t.the_geom)) AS the_geom,
    '<%= validation.action %>', <%= validation.user_id %>, <%= validation.id %>,
    1, t.phase AS prev_phase, <%= validation.id %> as edit_phase, true, '<%= validation.country.iso %>'::text
  FROM <%= view_name %> t
  WHERE t.toggle IS NULL

  UNION ALL

  SELECT *
  FROM (
    SELECT
      ST_Multi(ST_Difference(t.the_geom, ST_Buffer(ST_Collect(<%= render '_validation_geom' %>), 0))) AS the_geom,
      t.action, t.user_id, t.phase, t.phase_id, t.prev_phase, t.phase as edit_phase, true, '<%= validation.country.iso %>'::text
    FROM <%= table_name %> t
    WHERE t.toggle IS NULL
      AND country_id = '<%= validation.country.iso %>'
    GROUP BY t.the_geom, t.action, t.user_id, t.phase, t.phase_id, t.prev_phase
  ) a
  WHERE ST_IsEmpty(a.the_geom) = false

  UNION ALL

  SELECT
    a.the_geom, '<%= validation.action %>', <%= validation.user_id %>, <%= validation.id %> as prev_phase, 1,
    <%= validation.id %>, <%= validation.id %> as edit_phase, true, '<%= validation.country.iso %>'::text
  FROM (
    SELECT ST_Multi(ST_Difference(dt.polygon, ST_Buffer(ST_Collect(t.the_geom),0))) AS the_geom
    FROM <%= view_name %> t, (SELECT <%= render '_validation_geom' %> AS polygon) dt
    WHERE ST_Intersects(t.the_geom, dt.polygon) AND t.toggle IS NULL
    GROUP BY dt.polygon
  ) a
  WHERE ST_IsEmpty(a.the_geom) = false;

INSERT INTO <%= table_name %> (the_geom, action, user_id, phase, phase_id, prev_phase, edit_phase, toggle)
  SELECT
    ST_Multi(dt.polygon) AS the_geom, '<%= validation.action %>', <%= validation.user_id %>, <%= validation.id %>,
    1, <%= validation.id %>, <%= validation.id %>, true
  FROM (SELECT <%= render '_validation_geom' %> AS polygon) dt
  WHERE (
    SELECT COUNT(1)
    FROM <%= table_name %> t,
      (SELECT <%= render '_validation_geom' %> AS polygon) dt
    WHERE ST_Intersects(t.the_geom, dt.polygon)
      AND country_id = '<%= validation.country.iso %>';
      AND toggle IS NULL
  ) = 0;

UPDATE <%= table_name %> AS t
SET toggle = false
WHERE toggle IS NULL
  AND country_id = '<%= validation.country.iso %>';

<%= render '_normalize_projection' %>
